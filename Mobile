
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Вставить содержимое обработчика
	//Сообщить("1");
	ДатаРасчетногоЛиста =  НачалоМесяца(ДобавитьМесяц(ТекущаяДата(),-1));
	НачалоОтпуска =  ТекущаяДата();
	ОкончаниеОтпуска = ТекущаяДата();
КонецПроцедуры

&НаКлиенте
Процедура Войти(Команда)
	// Вставить содержимое обработчика.
	Если ТекКод = КодСМС Тогда
		Сообщить("Код верный");
		АвторизацияПройдена=Истина;
		Элементы.Группа3.Видимость=Ложь;
		ПолучитьДанныеСотрудника();
		Элементы.Группа4.Видимость=Истина;
	Иначе
		ПоказатьПредупреждение(,"Код СМС не верный",5);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьКод(Команда)
	// Вставить содержимое обработчика.
	Результат = ЗапроситьКодСМС();
	Если ТипЗнч(Результат)=Тип("Число") Тогда
		ТекКод = Результат;
	иначе
		Сообщить(Результат);
	КонецЕсли;
	
КонецПроцедуры
&НаСервере
Функция ЗапроситьКодСМС()
	ТекстОшибки = "";
	ТекОтвет = ОбщийМодуль.ЗапросВебСервиса("SendSMS", ТабельныйНомер, ТекстОшибки);
	Если ТекстОшибки<>"" Тогда
		Возврат ТекстОшибки;
	Иначе
		Возврат ТекОтвет;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ПолучитьДанныеСотрудника()
	ТекстОшибки = "";
	ТекОтвет = ОбщийМодуль.ЗапросВебСервиса("GetData", ТабельныйНомер, ТекстОшибки);
	Если ТекстОшибки<>"" Тогда
		Сообщить(ТекстОшибки);
	Иначе
		ГлавСтруктура = ТекОтвет.Получить(); //ВЫНИМАЕМ ИЗ ХРАНИЛИЩА
		Если ТипЗнч(ГлавСтруктура)=Тип("Структура") Тогда
			ФИО = ГлавСтруктура.ФИО;
			ДатаРождения = ГлавСтруктура.ДатаРождения;
			МобильныйТелефон = ГлавСтруктура.Представление;
			Пол = ГлавСтруктура.Пол;
			АдресМестаПроживания = ГлавСтруктура.АдресМестаПроживания;
			ДокументУдостоверяющийЛичность = ГлавСтруктура.ДокументУдостоверяющийЛичность;
			ИНН = ГлавСтруктура.ИНН;
			СНИЛС = ГлавСтруктура.СтраховойНомерПФР;
			СоставСемьи = ГлавСтруктура.СоставСемьи;
			СостояниеВБраке = ГлавСтруктура.СостояниеВБраке;
			ФизическоеЛицоОбразованиеТекст = ГлавСтруктура.ФизическоеЛицоОбразованиеТекст;
			
			Если ГлавСтруктура.Свойство("РасчетныйЛисток") Тогда
				РасчетныйЛист = ГлавСтруктура.РасчетныйЛисток;
			КонецЕсли;
			Если ГлавСтруктура.Свойство("ОстатокОтпуска") Тогда
				ОстаткиОтпуска = ГлавСтруктура.ОстатокОтпуска;
			КонецЕсли;
			Если ГлавСтруктура.Свойство("Льготы") Тогда
				ВыбранныеЛьготы.Загрузить(ГлавСтруктура.Льготы);
			КонецЕсли;
				Если ГлавСтруктура.Свойство("График") Тогда
				ТабличныйДокументГрафикРаботы = ГлавСтруктура.График;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	// Вставить содержимое обработчика.
	ОбновитьРасчетныйЛист();
КонецПроцедуры
&НаСервере
Процедура ОбновитьРасчетныйЛист()
	ТекстОшибки = "";
	ТекОтвет = ОбщийМодуль.ЗапросВебСервиса("GetList", ТабельныйНомер, ТекстОшибки, НачалоМесяца(ДатаРасчетногоЛиста));
	Если ТекстОшибки<>"" Тогда
		Сообщить(ТекстОшибки);
	Иначе
		ГлавСтруктура = ТекОтвет.Получить(); //ВЫНИМАЕМ ИЗ ХРАНИЛИЩА
		Если ТипЗнч(ГлавСтруктура)=Тип("Структура") Тогда
			Если ГлавСтруктура.Свойство("РасчетныйЛисток") Тогда
				РасчетныйЛист = ГлавСтруктура.РасчетныйЛисток;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ИсправитьДанные(Команда)
	ВремПараметры = Новый Структура;
	Оповещение = Новый ОписаниеОповещения("ПослеВводаСтроки",ЭтотОбъект, ВремПараметры);
	ПоказатьВводСтроки(Оповещение,"","Опишите изменения",0,Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаСтроки(Строка, Параметры) Экспорт
    Если НЕ Строка = Неопределено Тогда
        // запомнить текст напоминания
       Результат = СоздатьДокументИсправление(Строка);
	   Если Результат<>"" Тогда
		   Сообщить(Результат);
	   Иначе
		   ПоказатьПредупреждение(,"Изменения отправлены в отдел кадров", 5);
	   КонецЕсли;
	   
    КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СоздатьДокументИсправление(ТекСтрока)
	ТекстОшибки = "";
	ТекОтвет = ОбщийМодуль.ЗапросВебСервиса("NewDoc1", ТабельныйНомер, ТекстОшибки, ТекСтрока);
	Возврат ТекстОшибки;
КонецФункции

&НаСервере
Функция ОтправитьНаСервере()
	// Вставить содержимое обработчика.
	ГлавСтруктура = Новый Структура;
	ГлавСтруктура.Вставить("ДатаНачала",НачалоОтпуска);
	ГлавСтруктура.Вставить("ДатаОкончания",ОкончаниеОтпуска);
	ГлавСтруктура.Вставить("ОписаниеОтпуска",ОписаниеОтпуска);
	ХранилищеДанных = Новый ХранилищеЗначения(ГлавСтруктура, Новый СжатиеДанных(9));
	ТекстОшибки = "";
	ТекОтвет = ОбщийМодуль.ЗапросВебСервиса("NewDoc2", ТабельныйНомер, ТекстОшибки, ХранилищеДанных);
	Возврат ТекстОшибки;
	
КонецФункции

&НаКлиенте
Процедура Отправить(Команда)
	Если НачалоОтпуска>ОкончаниеОтпуска Тогда
		ПоказатьПредупреждение(,"Дата начала больше даты окончания отпуска",5);
		Возврат;
	КонецЕсли;
	
       Результат = ОтправитьНаСервере();
	   Если Результат<>"" Тогда
		   Сообщить(Результат);
	   Иначе
		   ПоказатьПредупреждение(,"Заявка подана в отдел кадров", 5);
	   КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеОтпускаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Если ЗначениеЗаполнено(НачалоОтпуска) Тогда
		КоличествоДней = Цел((ОкончаниеОтпуска-НачалоОтпуска)/86400)+1;
		ОписаниеОтпуска = "Прошу предоставить ежегодный оплачиваемый отпуск с "+Формат(НачалоОтпуска,"ДФ=dd.MM.yyyy") + " продолжительностью "+ Строка(КоличествоДней) + " календарных дней." 
	КонецЕсли;
	
КонецПроцедуры
